# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import QDesktopWidget, QSystemTrayIcon, QMenu, QAction, QMessageBox, QGraphicsView,QApplication, QFileDialog, QGraphicsScene, QGraphicsPixmapItem
from PyQt5.QtCore import QCoreApplication,Qt
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon, QPixmap, QImage, QPainter
from PyQt5.QtCore import QPoint
import icon
import ctypes
import shutil
import sys,os
import cv2

ctypes.windll.shell32.SetCurrentProcessExplicitAppUserModelID("gwt-img-anno")

class Imagemain(QtWidgets.QWidget):
    def setupUi(self):
        self.setWindowIcon(QIcon(":/logo.png"))
        self.resize(936, 541)
        self.setWindowTitle("图片二分类筛选工具")
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        self.setFont(font)
        
         # let the window center
        screen = QDesktopWidget().screenGeometry()
        window_size = self.geometry()
        self.move(int((screen.width() - window_size.width()) / 2),
                  int((screen.height() - window_size.height()) / 2))
        # ----------------------------------------------------------
        # sys tray
        self.tray = QSystemTrayIcon()
        self.tray.setIcon(QIcon(":/logo.png"))
        showAction = QAction("打开", self, triggered = self.Show)
        quitAction = QAction("退出", self, triggered = QCoreApplication.instance().quit)
        self.trayMenu = QMenu(self)
        self.trayMenu.addAction(showAction)
        self.trayMenu.addSeparator()
        self.trayMenu.addAction(quitAction)
        self.tray.setContextMenu(self.trayMenu)
        self.tray.show()
        # -----------------------------------------------------------------
        self.gridLayout = QtWidgets.QGridLayout(self)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.verticalLayout.setContentsMargins(0, -1, -1, 0)
        self.verticalLayout.setSpacing(0)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self)
        spacerItem = QtWidgets.QSpacerItem(400, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.btn_before = QtWidgets.QPushButton(self)
        self.btn_before.setShortcut( "Left")
        self.btn_before.setMaximumSize(QtCore.QSize(50, 16777215))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/left.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_before.setIcon(icon1)
        self.horizontalLayout_2.addWidget(self.btn_before)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.now_idx = QtWidgets.QLabel()
        self.now_idx.setAlignment(QtCore.Qt.AlignCenter)
        self.horizontalLayout_2.addWidget(self.now_idx)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem2)
        self.btn_next = QtWidgets.QPushButton(self)
        self.btn_next.setShortcut("Right")
        self.btn_next.setMaximumSize(QtCore.QSize(50, 16777215))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/right.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_next.setIcon(icon2)
        self.horizontalLayout_2.addWidget(self.btn_next)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem3)
        self.btn_moveimg = QtWidgets.QPushButton(self)
        self.btn_moveimg.setShortcut("Space")
        self.btn_moveimg.setMaximumSize(QtCore.QSize(50, 16777215))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/move.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_moveimg.setIcon(icon3)
        self.horizontalLayout_2.addWidget(self.btn_moveimg)
        spacerItem4 = QtWidgets.QSpacerItem(400, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem4)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(0)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.openimgdir = QtWidgets.QPushButton("打开图片所在目录")
        self.openimgdir.setMaximumSize(QtCore.QSize(200, 200))
        self.verticalLayout_2.addWidget(self.openimgdir)
        self.openlabeldir = QtWidgets.QPushButton("设置筛选后保存的目录")
        self.openlabeldir.setMaximumSize(QtCore.QSize(200, 16777215))
        self.verticalLayout_2.addWidget(self.openlabeldir)
        self.listWidgetimg = QtWidgets.QListWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listWidgetimg.sizePolicy().hasHeightForWidth())
        self.listWidgetimg.setSizePolicy(sizePolicy)
        self.listWidgetimg.setMaximumSize(QtCore.QSize(200, 16777215))
        self.verticalLayout_2.addWidget(self.listWidgetimg)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        self.graphicsView = QtWidgets.QGraphicsView(self)

        self.graphicsView.setMinimumSize(QtCore.QSize(500, 0))
        self.graphicsView.setAlignment(Qt.AlignCenter)
        self.graphicsView.setDragMode(QGraphicsView.ScrollHandDrag)
        self.graphicsView.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)  #隐藏滑动条
        self.graphicsView.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)  #隐藏滑动条
        self.graphicsView.setRenderHints(QPainter.Antialiasing | QPainter.HighQualityAntialiasing | QPainter.SmoothPixmapTransform)
        self.graphicsView.setViewportUpdateMode(self.graphicsView.SmartViewportUpdate)
        

        
        self.graphicsView.setFrameShape(QtWidgets.QFrame.Box)
        self.graphicsView.setFrameShadow(QtWidgets.QFrame.Raised)
        self.horizontalLayout.addWidget(self.graphicsView)
        self.listWidgetlabel = QtWidgets.QListWidget(self)
        self.listWidgetlabel.setMinimumSize(QtCore.QSize(200, 0))
        self.listWidgetlabel.setMaximumSize(QtCore.QSize(200, 16777215))
        self.horizontalLayout.addWidget(self.listWidgetlabel)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.gridLayout.addLayout(self.verticalLayout, 0, 0, 1, 1)

    
    # 从系统托盘展示窗口
    def Show(self):
        self.showNormal()
        self.activateWindow()
        self.setWindowFlags(QtCore.Qt.Window)
        self.show()
    
     # 重写关闭事件
    def closeEvent(self, event):
        reply = QMessageBox(QMessageBox.Question, self.tr("提示"), self.tr("确定要退出吗?"), QMessageBox.NoButton, self)
        yr_btn = reply.addButton(self.tr("是的我要退出"), QMessageBox.YesRole)
        reply.addButton(self.tr("最小化到托盘"), QMessageBox.NoRole)
        reply.exec_()
        if reply.clickedButton() == yr_btn:
            event.accept()
        else:
            event.ignore()
            # 最小化到托盘
            self.setWindowFlags(QtCore.Qt.SplashScreen | QtCore.Qt.FramelessWindowHint)